apply plugin: "kotlin"
apply plugin: "application"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "org.jetbrains.dokka"

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "com.github.jengelman.gradle.plugins:shadow:$shadowVersion"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokkaVersion"
    }
}

application {
    group "kz.seasky.tms"
    version "1.0.0-alpha"

    mainClassName = "io.ktor.server.netty.EngineMain"

    sourceSets {
        main.kotlin.srcDirs = main.java.srcDirs = ["src"]
        main.resources.srcDirs = ["resources"]
    }
}

shadowJar {
    manifest {
        attributes "Main-Class": application.mainClassName
    }
}

tasks.dokkaHtml.configure {
    outputDirectory.set(file("./documentation/html"))
}

tasks.withType(dokkaHtml.getClass()).configureEach {
    pluginsMapConfiguration.set(
            ["org.jetbrains.dokka.base.DokkaBase": """{ "separateInheritedMembers": true }"""]
    )
}

allprojects {
    repositories {
        mavenLocal()
        jcenter()
        maven { url "https://kotlin.bintray.com/ktor" }
        maven { url "https://dl.bintray.com/cy6ergn0m/uuid" }
    }

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"

        //Hikari
        implementation "com.zaxxer:HikariCP:$hikariVersion"

        //Exposed
        implementation "org.jetbrains.exposed:exposed-core:$exposedVersion"
        implementation "org.jetbrains.exposed:exposed-dao:$exposedVersion"
        implementation "org.jetbrains.exposed:exposed-jdbc:$exposedVersion"
        implementation "org.jetbrains.exposed:exposed-jodatime:$exposedVersion"

        //PostgreSQL
        implementation "org.postgresql:postgresql:$postgresqlVersion"

        //Ktor
        implementation "io.ktor:ktor-server-netty:$ktorVersion"
        implementation "io.ktor:ktor-server-core:$ktorVersion"
        implementation "io.ktor:ktor-auth:$ktorVersion"
        implementation "io.ktor:ktor-auth-jwt:$ktorVersion"
        implementation "io.ktor:ktor-gson:$ktorVersion"
        implementation "io.ktor:ktor-html-builder:$ktorVersion"
        implementation "ch.qos.logback:logback-classic:$logbackVersion"

        //Koin
        implementation "org.koin:koin-ktor:$koinVersion"

        //UUID
        implementation "org.jetbrains.kotlinx.experimental:exposed-uuid:$uuidVersion"
    }
}
